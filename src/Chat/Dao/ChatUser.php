<?php
namespace Socrates\Chat\Dao;


/**
 * @package CRM
 * @copyright Socrates LLC (c) 2004-2018
 *
 * Generated from /buildkit/build/chatbot/sites/all/modules/socrates/tools/extensions/civicrm-chatbot/xml/schema/CRM/Chat/ChatUser.xml
 * DO NOT EDIT.  Generated by Socrates\Core_CodeGen
 * (GenCodeChecksum:e7248421e7999a894c6554ae75caf695)
 */

/**
 * Database access object for the ChatUser entity.
 */
class ChatUser extends Socrates\Core_DAO {

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  static $_tableName = 'socrates_chat_user';

  /**
   * Should Socrates log any modifications to this table in the socrates_log table.
   *
   * @var bool
   */
  static $_log = TRUE;

  /**
   * Unique ID
   *
   * @var int unsigned
   */
  public $id;

  /**
   * FK to Contact
   *
   * @var int unsigned
   */
  public $contact_id;

  /**
   * Service that the user account belongs to
   *
   * @var string
   */
  public $service;

  /**
   * User identifier
   *
   * @var string
   */
  public $user_id;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'socrates_chat_user';
    parent::__construct();
  }

  /**
   * Returns foreign keys and entity references.
   *
   * @return array
   *   [Socrates\Core_Reference_Interface]
   */
  public static function getReferenceColumns() {
    if (!isset(Civi::$statics[__CLASS__]['links'])) {
      Civi::$statics[__CLASS__]['links'] = static ::createReferenceColumns(__CLASS__);
      Civi::$statics[__CLASS__]['links'][] = new Socrates\Core_Reference_Basic(self::getTableName(), 'contact_id', 'socrates_contact', 'id');
      Socrates\Core_DAO_AllCoreTables::invoke(__CLASS__, 'links_callback', Civi::$statics[__CLASS__]['links']);
    }
    return Civi::$statics[__CLASS__]['links'];
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => Socrates\Utils_Type::T_INT,
          'description' => 'Unique ID',
          'required' => TRUE,
          'table_name' => 'socrates_chat_user',
          'entity' => 'ChatUser',
          'bao' => 'Socrates\Chat\Dao\ChatUser',
          'localizable' => 0,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => Socrates\Utils_Type::T_INT,
          'description' => 'FK to Contact',
          'required' => TRUE,
          'table_name' => 'socrates_chat_user',
          'entity' => 'ChatUser',
          'bao' => 'Socrates\Chat\Dao\ChatUser',
          'localizable' => 0,
          'FKClassName' => 'Socrates\Contact_DAO_Contact',
        ],
        'service' => [
          'name' => 'service',
          'type' => Socrates\Utils_Type::T_STRING,
          'title' => ts('Service'),
          'description' => 'Service that the user account belongs to',
          'required' => TRUE,
          'maxlength' => 255,
          'size' => Socrates\Utils_Type::HUGE,
          'table_name' => 'socrates_chat_user',
          'entity' => 'ChatUser',
          'bao' => 'Socrates\Chat\Dao\ChatUser',
          'localizable' => 0,
        ],
        'user_id' => [
          'name' => 'user_id',
          'type' => Socrates\Utils_Type::T_STRING,
          'description' => 'User identifier',
          'required' => TRUE,
          'maxlength' => 255,
          'size' => Socrates\Utils_Type::HUGE,
          'table_name' => 'socrates_chat_user',
          'entity' => 'ChatUser',
          'bao' => 'Socrates\Chat\Dao\ChatUser',
          'localizable' => 0,
        ],
      ];
      Socrates\Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(Socrates\Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = Socrates\Core_DAO_AllCoreTables::getImports(__CLASS__, 'chat_user', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = Socrates\Core_DAO_AllCoreTables::getExports(__CLASS__, 'chat_user', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [
      'index_service' => [
        'name' => 'index_service',
        'field' => [
          0 => 'service',
        ],
        'localizable' => FALSE,
        'sig' => 'socrates_chat_user::0::service',
      ],
      'index_user_id' => [
        'name' => 'index_user_id',
        'field' => [
          0 => 'user_id',
        ],
        'localizable' => FALSE,
        'sig' => 'socrates_chat_user::0::user_id',
      ],
    ];
    return ($localize && !empty($indices)) ? Socrates\Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
